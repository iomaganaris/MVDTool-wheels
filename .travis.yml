env:
  global:
    - REPO_DIR=MVDTool
    # Commit from your-project that you want to build
    - BUILD_COMMIT=HEAD
    # pip dependencies to _build_ your project
    - BUILD_DEPENDS="numpy"
    # pip dependencies to _test_ your project.  Include any dependencies
    # that you need, that are also specified in BUILD_DEPENDS, this will be
    # a separate install.
    - TEST_DEPENDS="numpy nose"
    - PLAT=x86_64
    - UNICODE_WIDTH=32
    - DOCKER_IMAGE=bluebrain/morphio_wheel:x86_64
    - secure: "tRPEFFcQVv4RzaWgF5/6Mg7TAHlYaHcxg6v5UonHn1JxarhH5VQzvPRLA50SAQKug20XTah15Ae9ki15wu1HIM1x+AVVRiexF7WSmXlQqJBNytLMlzWYEcm86iDcjlHFHn82EWIpZhPDDXR+jRYf2ydpz2KgsiJQJ9mSCwg1no2YMP1Nm1q2SQTOvEm5KN+RVcc2jz9oYKB76GQTvjvqVmnxUqG6c1C9sbfXUlT3y9AUkg5DNxaBRfF8wUROtXkba+nIU5s4GmcKeCq5/JiJVUsyD1X5w9yXz6STwc0huu8EGprKuulcaB8r5+vR/rE0Z76bFOnoTGBiOdGZFx+G6YVsOcZnfXsr7NzHxHg81T0OvPCFV7wkk2FgE4hzvFp13VE9u6Q/xOlIEgC9iDe9EZaKelLgr8VmbJQDjk75hxaNyxDu1K4dWyTydvDzwmPg8GuaJ2d0qajtxDg8OagwGIutIqGXnrTGCHuf0BdBqJFbXGGtzezQqF610kUB4ozcN95HZiD6vHi7JCUzJvhYUn/o4ZfK2a9fVXD310eMQU1epZGDV0TxoKGQeA62RsFca++fgTfqRobyeATFxgjQIIC3WsNYPWSkj92ffE2sUc8xmmE69wbVHK2eDZrIs71hKJME1KYgshf8A4CSjiQG/psJA7EHJlCinyBa0q/Ks+o="


# Needed to have 'pip install' not complaining about sudo
language: python
# The Travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
dist: trusty
services: docker
cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/Library/Caches/Homebrew

jobs:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:
    - os: linux
      env: MB_PYTHON_VERSION=2.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - DOCKER_IMAGE=bluebrain/morphio_wheel:i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
        - DOCKER_IMAGE=bluebrain/morphio_wheel:i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
        - PLAT=i686
        - DOCKER_IMAGE=bluebrain/morphio_wheel:i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686
        - DOCKER_IMAGE=bluebrain/morphio_wheel:i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
        - DOCKER_IMAGE=bluebrain/morphio_wheel:i686
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.4
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.5
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=pypy-5.7

before_install:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - clean_code $REPO_DIR $BUILD_COMMIT
    - before_install

install:
    # Maybe get and clean and patch source
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    # Copy compiled wheels to dist/ where Travis `dpl` tool can find them and upload to PyPI
    - mkdir -p dist; cp ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl dist
    - pip install twine
    - twine upload --verbose -u iomagkanaris -p iomagkBP dist/*
